%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ESERCIZIO 1: 
% Cinque coppie e i loro bambini (uno per coppia) passano una 
% giornata presso un parco divertimenti. Tutti si sono divertiti 
% moltissimo, nonostante ogni bambino ad un certo punto si sia 
% sia perso. Scrivere un programma ASP che, tenendo conto degli 
% indizi riportati di seguito, determini il nome completo di ogni 
% coppia, il nome e l'età di ogni bambino, e il punto del parco in 
% cui ogni bambino si è perso.

% George, il cui cognome non è Smith, è un buon amico di Bill Walker, 
% che non e' il padre di Susie.

% I bambini ordinati per età crescente sono: il bimbo di 6 anni,
% Ann, quello trovato alla giostra delle tazze da tè, il figlio 
% maschio di George, e il figlio di Jane.

% Michael Charming, il cui figlio di 10 anni è il più grande, ha 
% aiutato Stan a trovare sua figlia, che è un anno più giovane di 
% Ann, presso il carosello. Il cognome di Stan non è Smith.

% Il bambino trovato alla ruota panoramica è più piccolo di John ma 
% più grande di Ann.

% Mary Smith è più grande di Susie ma più giovane di Tom

% Sally Jackson che non ha trovato suo figlio maschio alla giostra delle 
% tazze da tè, né alle montagne russe, ha, però, trovato presso il fiume 
% il figlio di Kim che ha 7 anni.

% Il figlio di Al e Linda che ha 8 anni, è il miglior amico della figlia di 
% Michelle che è più piccola di due anni.

child(john,m).
child(ann,f).
child(mary,f).
child(susie,f).
child(tom,m).

% Child - Last name - Age - Mother - Father - Place
story(F,M,LN,C,A,P) :- hasLastName(LN,C), hasAge(A,C), mother(M,C), father(F,C), found(P,C). 

% Guess
mother(linda,C) | mother(sally,C) | mother(jane,C) | mother(michelle,C) | mother(kim,C) :- child(C,_).
father(michael,C) | father(al,C) | father(stan,C) | father(bill,C) | father(george,C) :- child(C,_).
hasAge(6,C) | hasAge(7,C) | hasAge(8,C) | hasAge(9,C) | hasAge(10,C) :- child(C,_).
found(teacups,C) | found(carousel,C) | found(ferris,C) | found(rollercoaster,C) | found(flume,C) :- child(C,_). 
hasLastName(smith,C) | hasLastName(charming,C) | hasLastName(jackson,C) | hasLastName(walker,C) | hasLastName(bartlett,C) :- child(C,_).


% Check
%% Unicità degli accoppiamenti (Madre,Bimbo) / (Padre,Bimbo) / ecc...
:- mother(M,C1), mother(M,C2), C1!=C2.
:- father(F,C1), father(F,C2), C1!=C2.
:- hasAge(A,C1), hasAge(A,C2), C1!=C2.
:- found(P,C1), found(P,C2), C1!=C2.
:- hasLastName(LN,C1), hasLastName(LN,C2), C1!=C2.


% George, il cui cognome non è Smith, è un buon amico di Bill Walker, 
% che non e' il padre di Susie.

%% Non è possibile che il figlio di George faccia di cognome Smith
:- father(george,C), hasLastName(smith,C).

%% Non è possibile che Bill sia il padre di Susie
:- father(bill,susie).

%% Non è possibile che il cognome del figlio di Bill non sia Walker
:- father(bill,C), not hasLastName(walker,C).


% I bambini ordinati per età crescente sono: il bimbo di 6 anni,
% Ann, quello trovato alla giostra delle tazze da tè, il figlio 
% maschio di George, e il figlio di Jane.

%% Non è possibile che George non abbia un figlio maschio.
:- father(george,C), not child(C,m).

%% Non è possibile che il figlio di Jane sia più piccolo di quello di George
:- mother(jane,C1), father(george,C2), hasAge(A1,C1), hasAge(A2,C2), A1<A2.

%% Non è possibile che il figlio di George sia più piccolo di quello trovato alle tazze da tè
:- father(george,C1), found(teacups,C2), hasAge(A1,C1), hasAge(A2,C2), A1<A2.

%% Non è possibile che il bambino trovato alle tazze da tè sia più piccolo di Ann
:- found(teacups,C), hasAge(A1,C), hasAge(A2,ann), A1<A2.

%% Arrivati a questo punto Ann sicuramente ha 7 anni
hasAge(7,ann).


% Michael Charming, il cui figlio di 10 anni è il più grande, ha 
% aiutato Stan a trovare sua figlia, che è un anno più giovane di 
% Ann, presso il carosello. Il cognome di Stan non è Smith.

%% Non è possibile che il figlio di Michael abbia un cognome diverso da Charming
:- father(michael,C), not hasLastName(charming,C).

%% Non è possibile che il figlio di Michael abbia un'età diversa da 10
:- father(michael,C), not hasAge(10,C).

%% Non è possibile che il figlio di Stan abbia un'età diversa da quella di Ann meno 1.
:- father(stan,C), hasAge(A1,C), hasAge(A2,ann), A1!=A2-1.

%% Non è possibile che il figlio di Stan venga ritrovato in un posto diverso dal carosello.
:- father(stan,C), not found(carousel,C).

%% Non è possibile che Stan abbia una figlia che non sia femmina
:- father(stan,C), not child(C,f).

%% Non è possibile che il cognome di Stan sia Smith
:- father(stan,C), hasLastName(smith,C).


% Il bambino trovato alla ruota panoramica è più piccolo di John ma 
% più grande di Ann.

%% Non è possibile che il bambino trovato alla ruota panoramica non sia maschio
:- found(ferris,C), not child(C,m).

%% Non è possibile che il bambino trovato alla ruota panoramica sia John o Ann
:- found(ferris,john).
:- found(ferris,ann). 

%% È più piccolo di John ma più grande di Ann.
:- found(ferris,C), hasAge(A1,C), hasAge(A2,john), A1>A2.
:- found(ferris,C), hasAge(A1,C), hasAge(A2,ann), A1<A2.

% Mary Smith è più grande di Susie ma più giovane di Tom
:- hasAge(A1,mary), hasAge(A2,susie), A1<A2.
:- hasAge(A1,mary), hasAge(A2,tom), A1>A2.

%% Mary sicuramente farà di cognome Smith.
hasLastName(smith,mary).


% Sally Jackson che non ha trovato suo figlio maschio alla giostra delle 
% tazze da tè, né alle montagne russe, ha, però, trovato presso il fiume 
% il figlio di Kim che ha 7 anni.

%% Non è possibile che il figlio di Sally non sia maschio
:- mother(sally,C), not child(C,m).

%% Non è possibile che il cognome del figlio di Sally non sia Jackson.
:- mother(sally,C), not hasLastName(jackson,C).

%% Non è possibile che il figlio di Sally venga ritrovato alle tazze da te
:- mother(sally,C), found(teacups,C).

%% Non è possibile che il figlio di Sally venga ritrovato alle montagne russe
:- mother(sally,C), found(rollercoaster,C).

%% Non è possibile che il figlio di Kim non abbia 7 anni
:- mother(kim,C), not hasAge(7,C).

%% Non è possibile che il figlio di Kim non venga trovato presso il fiume
:- mother(kim,C), not found(flume,C).

% Il figlio di Al e Linda che ha 8 anni, è il miglior amico della figlia di 
% Michelle che è più piccola di due anni.

%% Non è possibile che Linda abbia un figlio diverso da quello di Al
:- father(al,C), not mother(linda,C).

%% Non è possibile che Michelle non abbia una figlia femmina.
:- mother(michelle,C), not child(C,f).

%% Non è possibile che il figlio di Al non abbia 8 anni
:- father(al,C), not hasAge(8,C).

%% Non è possibile che la figlia di Michelle abbia un'età diversa da quella della figlia di Linda meno 2 (in pratica ha 6 anni)
:- mother(michelle,C1), mother(linda,C2), hasAge(A1,C1), hasAge(A2,C2), A1!=A2-2. 
%hasAge(6,C) :- mother(michelle,C).