%%%%%% SPOILER: QUESTA NON É UNA SOLUZIONE %%%%%%








%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ESERCIZIO 2: 
% Scrivere un programma ASP che calcoli tutti i sottoinsiemi di un
% grafo G=<V,E> dato in input che siano massimali rispetto alla
% proprietà di essere K-colorabili, dove K è a sua volta dato in input.
% Ricordiamo che un (sotto)grafo è K-colorabile se è possibile
% assegnare un colore tra K dati in input in modo tale che non capiti
% mai che due nodi adiacenti abbiano lo stesso colore.

% grafo esempio: https://i.imgur.com/SmNFtUa.png

vertex(X).
edge(X,Y).
edge(X,Y) :- edge(Y,X).

color(1..K).

% Guess the subset
in(X) | out(X) :- vertex(X).

% Guess
coloring(V,C) | nonColoring(V,C) :- in(V), color(C).

% Just one color for a vertex
:- coloring(V,C1), coloring(V,C2), C1<>C2.
colored(X) :- coloring(X,_).
:- in(X), not colored(X).

% Force k-colorability
:- edge(X,Y), coloring(X,C), coloring(Y,C).

% Check if a vertex might stay in
canBeIn(X) :- vertex(X), not sameColorInEdge(X).
sameColorInEdge(X) :- edge(X,Y), coloring(X,C), coloring(Y,C), in(Y).

% Check maximality: cannot leave a vertex out if it can stay in
:- out(X), canBeIn(X).