allegro(Y,Y) | vacanza(Y,Y) :- mare(Y), Y>2.
allegro(X,Y) :- vacanza(Y,X), mare(X), X<3.
vacanza(X,Y) :- allegro(X,Z), mare(Y), not mare(Z).

mare(2).    mare(3).    mare(4).
vacanza(1,2).

% Istanziazione

allegro(3,3) | vacanza(3,3) :- mare(3), 3>2.
allegro(4,4) | vacanza(4,4) :- mare(4), 4>2.
allegro(2,1) :- vacanza(1,2), mare(2), 2<3.
vacanza(3,2) :- allegro(3,3), mare(2), not mare(3).         % not mare(2) sarà sempre negativo, quindi questa regola non sarà mai verificata
vacanza(3,3) :- allegro(3,3), mare(3), not mare(3).         % not mare(3) sarà sempre negativo, quindi questa regola non sarà mai verificata
vacanza(3,4) :- allegro(3,3), mare(4), not mare(3).         % not mare(4) sarà sempre negativo, quindi questa regola non sarà mai verificata
vacanza(4,2) :- allegro(4,4), mare(2), not mare(4).         % not mare(4) sarà sempre negativo, quindi questa regola non sarà mai verificata
vacanza(2,2) :- allegro(2,1), mare(2), not mare(1).
vacanza(2,3) :- allegro(2,1), mare(3), not mare(1).
vacanza(2,4) :- allegro(2,1), mare(4), not mare(1).

allegro(2,3) :- vacanza(3,2), mare(2), 2<3.                 % vacanza(3,2) non potrà mai essere vero (vedi sopra), quindi questa regola non sarà mai verificata.
allegro(2,4) :- vacanza(4,2), mare(2), 2<3.                 % vacanza(4,2) non potrà mai essere vero (vedi sopra), quindi questa regola non sarà mai verificata.
allegro(2,2) :- vacanza(2,2), mare(2), 2<3.

mare(2).    mare(3).    mare(4).
vacanza(1,2).

% Istanziazione semplificata

allegro(3,3) | vacanza(3,3).
allegro(4,4) | vacanza(4,4).
allegro(2,1).
vacanza(2,2) :- not mare(1).
vacanza(2,3) :- not mare(1).
vacanza(2,4) :- not mare(1).
allegro(2,2) :- vacanza(2,2).

mare(2).    mare(3).    mare(4).
vacanza(1,2).

% Cerco gli AS {
    I1: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), allegro(3,3), allegro(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}
    I2: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), vacanza(3,3), allegro(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}
    I3: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), allegro(3,3), vacanza(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}
    I4: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), vacanza(3,3), vacanza(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}
    % SPOILER: Sono tutti effettivamente AS
}


% Ridotti

% I1: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), allegro(3,3), allegro(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}

allegro(3,3) | vacanza(3,3).
allegro(4,4) | vacanza(4,4).
allegro(2,1).
vacanza(2,2).
vacanza(2,3).
vacanza(2,4).
allegro(2,2) :- vacanza(2,2).

mare(2).    mare(3).    mare(4).
vacanza(1,2).

%%% I1 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine


% I2: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), vacanza(3,3), allegro(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}


allegro(3,3) | vacanza(3,3).
allegro(4,4) | vacanza(4,4).
allegro(2,1).
vacanza(2,2).
vacanza(2,3).
vacanza(2,4).
allegro(2,2) :- vacanza(2,2).

mare(2).    mare(3).    mare(4).
vacanza(1,2).

%%% I2 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine


% I3: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), allegro(3,3), vacanza(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}

allegro(3,3) | vacanza(3,3).
allegro(4,4) | vacanza(4,4).
allegro(2,1).
vacanza(2,2).
vacanza(2,3).
vacanza(2,4).
allegro(2,2) :- vacanza(2,2).

mare(2).    mare(3).    mare(4).
vacanza(1,2).

%%% I3 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine


% I4: {mare(2), mare(3), mare(4), vacanza(1,2), allegro(2,1), vacanza(3,3), vacanza(4,4), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(2,2)}

allegro(3,3) | vacanza(3,3).
allegro(4,4) | vacanza(4,4).
allegro(2,1).
vacanza(2,2).
vacanza(2,3).
vacanza(2,4).
allegro(2,2) :- vacanza(2,2).

mare(2).    mare(3).    mare(4).
vacanza(1,2).
    
%%% I4 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine



%%% SOLUZIONE PROF %%%

{mare(2), mare(3), mare(4), allegro(2,1), allegro(2,2), vacanza(1,2), vacanza(2,2), vacanza(2,3), vacanza(2,4), vacanza(3,3), vacanza(4,4)}
{mare(2), mare(3), mare(4), allegro(2,1), allegro(2,2), vacanza(1,2), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(3,3), vacanza(4,4)}
{mare(2), mare(3), mare(4), allegro(2,1), allegro(2,2), vacanza(1,2), vacanza(2,2), vacanza(2,3), vacanza(2,4), vacanza(3,3), allegro(4,4)}
{mare(2), mare(3), mare(4), allegro(2,1), allegro(2,2), vacanza(1,2), vacanza(2,2), vacanza(2,3), vacanza(2,4), allegro(3,3), allegro(4,4)}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
culla(Y) :- bambino(Y), not piange(Y,Y).
culla(Y) :- piange(Y,X), bambino(X), Y=X-1.
piange(X,X) :- bambino(X), Y=X+1, not latte(Y), not culla(X).
piange(X,Y):- culla(X), culla(Y), not latte(X).

piange(1,2).
bambino(2).
bambino(3).
latte(2).


% Istanziazione (direttamente semplificata)

culla(2) :- not piange(2,2).
culla(3) :- not piange(3,3).                                            % Vedi nota 1, dopo i fatti
culla(1).
piange(2,2) :- not culla(2).
piange(3,3) :- not culla(3).                              
piange(1,1).
piange(1,3) :- culla(3).
piange(3,1) :- culla(3).
piange(3,2) :- culla(3), culla(2).                         
piange(3,3) :- culla(3).                                                % Vedi nota 1, dopo i fatti

piange(1,2).
bambino(2).
bambino(3).
latte(2).

% Nota 1: Non riuscirò mai ad ottenere il supporto per "culla(3)": prendendola dovrei prendere per forza la testa dell'ultima regola, togliendo di conseguenza il supporto alla prima.

% Cerco gli AS {
    I1: {piange(1,2), bambino(2), bambino(3), latte(2), culla(1), culla(2), piange(1,1), piange(3,3)}
    I2: {piange(1,2), bambino(2), bambino(3), latte(2), culla(1), piange(2,2), piange(3,3), piange(1,1)}

    % SPOILER: Sono effettivamente gli AS
}

% Ridotti

% I1: {piange(1,2), bambino(2), bambino(3), latte(2), culla(1), culla(2), piange(1,1), piange(3,3)}

culla(2).
culla(1).
piange(3,3).                              
piange(1,1).
piange(1,2) :- culla(2).

piange(1,2).
bambino(2).
bambino(3).
latte(2).

%%% I1 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine


% I2: {piange(1,2), bambino(2), bambino(3), latte(2), culla(1), piange(2,2), piange(3,3), piange(1,1)}

culla(1).
piange(2,2).
piange(3,3).                              
piange(1,1).

piange(1,2).
bambino(2).
bambino(3).
latte(2).

%%% I2 è un modello per il ridotto, è minimale, è supportato, ed essendo aciclico possiamo dire che è un AS, anche per il programma d'origine



%%% SOLUZIONE PROF %%%

{bambino(2), bambino(3), latte(2), culla(1), piange(1,1), piange(1,2), piange(2,2), piange(3,3)}
{bambino(2), bambino(3), latte(2), culla(1), piange(1,1), piange(1,2), culla(2), piange(3,3)}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%