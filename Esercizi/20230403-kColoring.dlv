%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ESERCIZIO 2: 
% Scrivere un programma ASP che calcoli tutti i sottoinsiemi di un
% grafo G=<V,E> dato in input che siano massimali rispetto alla
% proprietà di essere K-colorabili, dove K è a sua volta dato in input.
% Ricordiamo che un (sotto)grafo è K-colorabile se è possibile
% assegnare un colore tra K dati in input in modo tale che non capiti
% mai che due nodi adiacenti abbiano lo stesso colore.

% grafo esempio: https://i.imgur.com/SmNFtUa.png

node(1..10).

color(1..3).

edge(1,2).
edge(1,3).
edge(1,6).
edge(2,7).
edge(2,8).
edge(3,4).
edge(3,9).
edge(4,5).
edge(4,8).
edge(5,6).
edge(5,7).
edge(6,10).
edge(X,Y) :- edge(Y,X).

% Guess
col(N,C) | nCol(N,C) :- node(N), color(C).


% Check

%% Non è possibile che ci siano nodi adiacenti dello stesso colore
:- col(N1,C), col(N2,C), edge(N1,N2), N1<>N2. 

%% Non è possibile che ci sia un colore che non è stato utilizzato
usedColor(C) :- col(_,C).
:- color(C), not usedColor(C).

%% Non è possibile che un nodo sia colorato più volte
:- col(N,C1), col(N,C2), C1<>C2.

%% Segno i colori di tutti i col a cui ogni nCol è collegato
connectedToCol(N1,C) :- nCol(N1,_), col(N2,C), edge(N1,N2).

%% A questo punto non può esistere un colore tale che non è presente nella tabella dei colori collegati
:- nCol(N,_), color(C), not connectedToCol(N,C). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

